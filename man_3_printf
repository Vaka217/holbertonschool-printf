.TH man_3_printf

.SH Name
_printf

.SH SYNOPSIS
int _printf(const char *format, ...);

.SH DESCRIPTION
printf function produces output according to a .B format and write the output to stdout. 
.B format is a string that specifies how subsequent arguments are converted for output.

.B Format of the format string
The format string is a character string, beginning and ending in
its initial shift state, if any.  The format string is composed
of zero or more directives: ordinary characters (not %), which
are copied unchanged to the output stream; and conversion
specifications, each of which results in fetching zero or more
subsequent arguments.  Each conversion specification is
introduced by the character %, and ends with a conversion
specifier.

The arguments must correspond properly with the conversion specifier.
By default, the arguments are used in the order given, where each
conversion specifier asks for the next argument (and it is an error
if insufficiently many arguments are given).

.B Conversion specifiers

A character that specifies the type of conversion to be applied.
The conversion specifiers and their meanings are:

.B %: 
	A '%' is written.  No argument is converted.  The complete
        conversion specification is '%%'.

.B c: 
	The int argument is converted
        to an unsigned char, and the resulting character is written.
.B s:
 	the const char * argument is expected to be a pointer to an 
	array of character type (pointer to a string). 

.B d , i: 
	The int argument is converted to signed decimal notation.

.SH RETURN VALUE

	Upon successful return, these functions return the number of
	characters printed (excluding the null byte used to end output to
	strings).If an output error is encountered, a negative value is returned.

.SH EXAMPLES

	To print a simple sentence:

	#include "main.h"
	_printf("Let's try to printf a simple sentence.\n");

	Or also:
	
	#include "main.h"
	_printf("%s", "Let's try to printf a simple sentence.\n");

	To print the maximum value for an integer type:
	
	#include "main.h"
	#include <limits.h>
	_printf("%d", INT_MAX);
